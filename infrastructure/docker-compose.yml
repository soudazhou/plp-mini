# LegalAnalytics Mini - Local Development Infrastructure
# Alternative to AWS services for educational purposes
version: '3.8'

services:
  # PostgreSQL Database (Primary storage)
  postgres:
    image: postgres:15
    container_name: legalanalytics-postgres
    environment:
      POSTGRES_DB: legalanalytics
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - legalanalytics-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev -d legalanalytics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Elasticsearch (Search engine)
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: legalanalytics-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - legalanalytics-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (Job queue - SQS alternative)
  redis:
    image: redis:7-alpine
    container_name: legalanalytics-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - legalanalytics-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MailHog (Email testing - SNS alternative)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: legalanalytics-mailhog
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    networks:
      - legalanalytics-network

  # MinIO (S3-compatible storage - optional)
  minio:
    image: minio/minio:latest
    container_name: legalanalytics-minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    networks:
      - legalanalytics-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Kibana (Elasticsearch UI - optional for development)
  kibana:
    image: kibana:8.11.0
    container_name: legalanalytics-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=
    ports:
      - "5601:5601"
    networks:
      - legalanalytics-network
    depends_on:
      - elasticsearch
    profiles:
      - development

networks:
  legalanalytics-network:
    driver: bridge

volumes:
  postgres_data:
  elasticsearch_data:
  redis_data:
  minio_data: